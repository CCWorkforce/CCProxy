[project]
name = "CCProxy"
version = "1.2.0"
description = "Proxy server enabling Claude Code to work with OpenAI and its compatible API providers"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "CCWorkforce Engineers"}
]
dependencies = [
    "fastapi[standard]>=0.117.1",
    "uvicorn>=0.37.0",
    "gunicorn>=23.0.0",
    "httpx[http2]>=0.28.1",
    "pydantic>=2.11.9",
    "python-dotenv>=1.1.1",
    "openai[aiohttp]>=1.109.0",
    "httpx-aiohttp>=0.1.8",
    "pydantic-settings>=2.10.1",
    "tiktoken>=0.11.0",
    "yarl>=1.20.1",
    "typing-extensions>=4.15.0",
    "starlette>=0.48.0",
    "standard>=1.0.3",
    "asyncio>=4.0.0",
    "orjson>=3.11.3",
    "opentelemetry-api>=1.37.0",
    "opentelemetry-sdk>=1.37.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.37.0",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
]

[project.optional-dependencies]
aiohttp = [
    "aiohttp>=3.12.15",
    "aiodns>=3.5.0",
]

[tool.pytest.ini_options]
pythonpath = [".", "ccproxy"]
testpaths = ["tests"]

[dependency-groups]
dev = [
    "pytest-mock>=3.15.1",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "aiofiles>=24.1.0",
    "respx>=0.22.0",
    "ruff>=0.13.1",
    "mypy>=1.18.2",
]

[tool.ruff]
target-version = "py313"

[tool.ruff.lint.isort]
known-first-party = ["ccproxy"]

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
warn_unused_ignores = true

# Stricter type checking enabled
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true

# Still disable some error codes during transition
disable_error_code = [
    "misc",  # Keep misc disabled for now
]

plugins = ['pydantic.mypy']

# Per-module options for gradual typing
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "ccproxy.application.cache.*"
disallow_untyped_defs = false  # Gradually enable

[[tool.mypy.overrides]]
module = "ccproxy.application.converters_module.*"
disallow_untyped_defs = false  # Gradually enable
